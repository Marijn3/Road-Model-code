import geopandas as gpd
from shapely.wkt import loads
import matplotlib.pyplot as plt

# Define the geometries
new_section_geom = "LINESTRING (148823.76 408568.56, 148823.34 408566.41, 148822.9 408561.39, 148822.98 408552.65, 148823.51 408547.6, 148825.22 408540.31, 148826.91 408535.58, 148828.71 408531.32, 148830.95 408526.89, 148834.14 408521.62, 148837.08 408517.59, 148839.77 408514.54, 148843.32 408511.02, 148847.08 408507.79, 148853.71 408503.09, 148857.99 408500.6, 148861.92 408498.81, 148866.57 408496.96, 148871.32 408495.57, 148875.56 408494.6, 148880.49 408493.81, 148885.42 408493.42, 148890.21 408493.37, 148895.2 408493.72, 148900.15 408494.41, 148904.29 408495.3, 148909.1 408496.72, 148915.08 408498.98, 148919.64 408501.02, 148925.43 408503.96, 148934.19 408508.78, 148947.17 408516.32, 148947.39 408516.38)"
other_section_geom = "LINESTRING (148823.76 408568.56, 148823.34 408566.41, 148822.9 408561.39, 148822.98 408552.65, 148823.51 408547.6, 148825.22 408540.31, 148826.91 408535.58, 148828.71 408531.32, 148830.95 408526.89, 148834.14 408521.62, 148837.08 408517.59, 148839.77 408514.54, 148843.32 408511.02, 148847.08 408507.79, 148853.71 408503.09, 148857.99 408500.6, 148861.92 408498.81, 148866.57 408496.96, 148871.32 408495.57, 148875.56 408494.6, 148880.49 408493.81, 148885.42 408493.42, 148890.21 408493.37, 148895.2 408493.72, 148900.15 408494.41, 148904.29 408495.3, 148909.1 408496.72, 148915.08 408498.98, 148919.64 408501.02, 148925.43 408503.96, 148934.19 408508.78, 148947.17 408516.32, 148962.95 408520.12)"
overlap_geom = "MULTILINESTRING ((148823.76 408568.56, 148823.34 408566.41), (148823.34 408566.41, 148822.9 408561.39), (148822.9 408561.39, 148822.98 408552.65), (148822.98 408552.65, 148823.51 408547.6), (148823.51 408547.6, 148825.22 408540.31), (148825.22 408540.31, 148826.91 408535.58), (148826.91 408535.58, 148828.71 408531.32), (148828.71 408531.32, 148830.95 408526.89), (148830.95 408526.89, 148834.14 408521.62), (148834.14 408521.62, 148837.08 408517.59), (148837.08 408517.59, 148839.77 408514.54), (148839.77 408514.54, 148843.32 408511.02), (148843.32 408511.02, 148847.08 408507.79), (148847.08 408507.79, 148853.71 408503.09), (148853.71 408503.09, 148857.99 408500.6), (148857.99 408500.6, 148861.92 408498.81), (148861.92 408498.81, 148866.57 408496.96), (148866.57 408496.96, 148871.32 408495.57), (148871.32 408495.57, 148875.56 408494.6), (148875.56 408494.6, 148880.49 408493.81), (148880.49 408493.81, 148885.42 408493.42), (148885.42 408493.42, 148890.21 408493.37), (148890.21 408493.37, 148895.2 408493.72), (148895.2 408493.72, 148900.15 408494.41), (148900.15 408494.41, 148904.29 408495.3), (148904.29 408495.3, 148909.1 408496.72), (148909.1 408496.72, 148915.08 408498.98), (148915.08 408498.98, 148919.64 408501.02), (148919.64 408501.02, 148925.43 408503.96), (148925.43 408503.96, 148934.19 408508.78), (148934.19 408508.78, 148947.17 408516.32))"
remaining_geom = "MULTILINESTRING ((148947.17 408516.32, 148962.95 408520.12), (148947.17 408516.32, 148947.39 408516.38))"

# Convert WKT to Shapely geometries
new_section_geometry = loads(new_section_geom)
other_section_geometry = loads(other_section_geom)
overlap_geometry = loads(overlap_geom)
remaining_geometry = loads(remaining_geom)

# Create GeoDataFrames
new_section_df = gpd.GeoDataFrame(geometry=[new_section_geometry], columns=['geometry'])
other_section_df = gpd.GeoDataFrame(geometry=[other_section_geometry], columns=['geometry'])
overlap_df = gpd.GeoDataFrame(geometry=[overlap_geometry], columns=['geometry'])
remaining_df = gpd.GeoDataFrame(geometry=[remaining_geometry], columns=['geometry'])

# Plot the geometries
fig, ax = plt.subplots(figsize=(10, 8))

#new_section_df.plot(ax=ax, color='blue', linewidth=12, label='New Section')
#other_section_df.plot(ax=ax, color='green', linewidth=8, label='Other Section')
overlap_df.plot(ax=ax, color='orange', linewidth=4, label='Overlap')
remaining_df.plot(ax=ax, color='red', linewidth=4, label='Remaining')

# Add labels and legend
ax.set_title('Visualizing Geometries')
ax.set_xlabel('X Coordinate')
ax.set_ylabel('Y Coordinate')
ax.legend()

plt.show()
